@model AdoptifySystem.Adopter_Relative

@{
    ViewBag.Title = "Create";
}

<div id="main">
    <br />
    <div class="" style="text-align:center;padding-left:120px">
        <div class="col-sm-10" style='background-color: #2ba6cb'>
            <h1 style="color:white">Add Adopter Relative</h1>
        </div>
    </div>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Adopter_ID, "Adopter", htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline;", @Title = "Select Adopter Name" })
                <div class="col-md-10">
                    @Html.DropDownList("Adopter_ID", null, htmlAttributes: new { @class = "form-control" })
                    <br />
                    @Html.ValidationMessageFor(model => model.Adopter_ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Relative_Name, htmlAttributes: new { @class = "control-label col-md-2", @Title = "Enter Relative Name" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Relative_Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Relative Name" } })
                    <br />
                    @Html.ValidationMessageFor(model => model.Relative_Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Relative_Surname, htmlAttributes: new { @class = "control-label col-md-2", @Title = "Enter Relative Surname" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Relative_Surname, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Relative Surname" } })
                    <br />
                    @Html.ValidationMessageFor(model => model.Relative_Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Relative_Email, htmlAttributes: new { @class = "control-label col-md-2", @Title = "Enter Relative Email" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Relative_Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Relative Email" } })
                    <br />
                    @Html.ValidationMessageFor(model => model.Relative_Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Relative_Address, htmlAttributes: new { @class = "control-label col-md-2", @Title = "Enter Relative Address" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Relative_Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Relative Address" } })
                    <br />
                    @Html.ValidationMessageFor(model => model.Relative_Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Relative_PostalAddress, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline;", @Title = "Enter Relative Postal Address" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Relative_PostalAddress, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Relative Postal Address" } })
                    <br />
                    @Html.ValidationMessageFor(model => model.Relative_PostalAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Relative_Home_Tel, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline;", @Title = "Enter Relative Home Number" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Relative_Home_Tel, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Relative Home Number" } })
                    <br />
                    @Html.ValidationMessageFor(model => model.Relative_Home_Tel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Relative_Work_Tel, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline;", @Title = "Enter Relative Work Number" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Relative_Work_Tel, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Relative Work Number" } })
                    <br />
                    @Html.ValidationMessageFor(model => model.Relative_Work_Tel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Relative_Cell, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline;", @Title = "Enter Relative Cell Number" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Relative_Cell, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Relative Cell Number" } })
                    <br />
                    @Html.ValidationMessageFor(model => model.Relative_Cell, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Relationship, htmlAttributes: new { @class = "control-label col-md-2", style = "display:inline;", @Title = "Enter Relative Relationship to Adopter" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Relationship, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Relative Relationship to Adopter" } })
                    <br />
                    @Html.ValidationMessageFor(model => model.Relationship, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">

                    @Html.ActionLink("Back to List", "Index", "Adopter_Relative", new { @class = "btn btn-primary", style = "float:right", @Title = "Click to go Back" })
                    <input type="submit" value="Save" class="btn btn-success" style="float:right" title="Click to Save Adopter Relative" />
                    <br />
                </div>
            </div>
        </div>
    }
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}