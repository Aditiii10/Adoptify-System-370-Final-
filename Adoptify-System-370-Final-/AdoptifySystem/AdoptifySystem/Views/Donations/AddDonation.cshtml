@model AdoptifySystem.Models.nickeymodel.Flexible
<head>
    <script src="https://code.jquery.com/jquery-2.1.1.min.js" type="text/javascript"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.1/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.1/js/select2.min.js"></script>
</head>
<style>
    .column {
        float: left;
        width: 50%;
    }

    .row:after {
        content: "";
        display: table;
        clear: both;
    }

    #addmoney {
        margin-top: 130px;
    }
</style>
<div class="form-group">
    <h1 class="center-align">@ViewBag.Title</h1>
</div>
<br>
<div id="content">
    @using (Html.BeginForm("search_donor", "Donations", FormMethod.Get))
    {
        <div class="row">
            <div class="column">
                @if (Model.adddonationlist == null)
                {
                    <select id="donor" onclick="sync(this)">

                        @if (Model.donor != null)
                        {
                            foreach (var item in Model.DonorList)
                            {
                                if (item.Donor_Name == Model.donor.Donor_Name && item.Donor_Surname == Model.donor.Donor_Surname)
                                {
                                    <option selected>@item.Donor_Name @item.Donor_Surname</option>
                                }
                                else
                                {
                                    <option>@item.Donor_Name @item.Donor_Surname</option>
                                }

                            }

                        }
                        else if (Model.donor == null)
                        {

                            foreach (var item in Model.DonorList)
                            {
                                <option class="form-control">@item.Donor_Name @item.Donor_Surname</option>
                            }


                        }
                        }

                    </select>
                    <input type="text" id="pa" name="inid" />
                    <button id="btnSave" class="btn btn-lg btn-primary">Search</button>
                }
                else
                {

                }

            </div>
            <div class="column">
               if (Model.donor != null)
        {
                <div id="DonorDetails">
                    <h3 class="table-primary">Current Donor:</h3>
                    <label id="Donor_Name">Donor Name: @ViewBag.Donorname </label>
                    <br />
                    <label id="Donor_Surname">Donor Surname:@ViewBag.Donorsurname</label>
                </div>
                <div id="DonorDetails">
                    <h3 class="table-primary">Current Donor:</h3>
                    <label id="Donor_Name">Donor Name: @Model.donor.Donor_Name</label>
                    <br />
                    <label id="Donor_Surname">Donor Surname:@Model.donor.Donor_Surname</label>
                </div>
                }
            </div>
        </div>
    }
    <div>
        <br />
        <div class="row" style="width:100%;">
            <div class="column">
                <div class="form-header table-primary">
                    <h1 class="center-align">Enter Stock Details</h1>
                </div>
                @using (Html.BeginForm("search_stock", "Donations", FormMethod.Post))
                {
                    <div id="AddtheStock">
                        <label>Enter Stock:</label><br />
                        <select id="stock" onclick="block()">
                            @if (Model.stock != null)
                            {
                                foreach (var item in Model.Stocklist)
                                {
                                    if (item.Stock_Type.Stock_Type_Name == Model.stock.Stock_Type.Stock_Type_Name && item.Stock_Type_ID == Model.stock.Stock_Type_ID)
                                    {
                                        <option selected>@item.Stock_Type.Stock_Type_Name - @item.Stock_Description Complete </option>

                                    }
                                    else
                                    {
                                        <option>@item.Stock_Type.Stock_Type_Name - @item.Stock_Description </option>
                                    }

                                }

                            }
                            else if (Model.stock == null)
                            {

                                foreach (var item in Model.Stocklist)
                                {
                                    <option class="form-control">@item.Stock_Type.Stock_Type_Name - @item.Stock_Description </option>
                                }


                            }
                        </select>
                        <input type="text" id="as" name="inid" hidden />
                        <button id="btnSave" class="btn btn-lg btn-primary">Search</button>
                    </div>
                }
                @using (Html.BeginForm("add_stock", "Donations", FormMethod.Post))
                {
                    <div class="form-group">
                        <div class="width">
                            <label>Enter Quantity</label><br />
                            <input class="form-control" type="text" name="Donation_Quantity" placeholder="Enter Quantity">
                        </div>
                    </div>
                    <div class="col" style="text-align: center; width: 50%; float:left;">
                        <button name="button" value="Add Stock" class="btn btn-info">Add Stock</button>
                    </div>
                }
            </div>
            <div class="column">
                <div class="form-header table-primary">
                    <h1 class="center-align">Money</h1>
                </div>
                @using (Html.BeginForm("add_money", "Donations", FormMethod.Post))
                {

                    <div class="form-group">
                        <div>
                            <label>Enter Amount</label><br />
                            <input class="form-control" type="text" name="Donation_Quantity" placeholder="Enter Quantity">
                        </div>
                    </div>
                    <div style="text-align: center; width: 50%; float:right;">
                        <button id="addmoney" name="button" value="Add Money" class="btn btn-info">Add Money</button>
                    </div>

                }
            </div>
        </div>
        <br>
        <div>
            <div class="table">
                <div class="form-header table-primary">
                    <h1 class="center-align">Current Donations</h1>
                </div>
                @if (Model.adddonationlist != null)
                {
                    int count = 0;
                    <table class="table table-bordered">
                        <thead class="table-primary">
                            <tr>
                                <td>Donor Name</td>
                                <td>Donation Type</td>
                                <td>Donation Quantity</td>
                                <td></td>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.adddonationlist)
                            {
                                <tr>
                                    <td>@Model.donor.Donor_Name</td>
                                    @if (item.Donation_Type.Donation_Type_Name == "Stock")
                                    {
                                        <td>@item.Stock.Stock_Type.Stock_Type_Name</td>
                                    }
                                    else
                                    {
                                        <td>@item.Donation_Type.Donation_Type_Name</td>
                                    }
                                    <td>@item.Donation_Quantity</td>
                                    <td>@Html.ActionLink("Delete", "removefromlist", new { donationline = count }, new { @class = "btn btn-danger" })</td>
                                </tr>
                                count++;
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <table class="table table-bordered">
                        <thead class="thead-light"></thead>
                        <tbody>
                            <tr>No Results</tr>
                        </tbody>
                    </table>
                }
            </div>
        </div>
        <div class="form-group">
            @using (Html.BeginForm("save", "Donations", FormMethod.Post))
            {
                <div class="col-xs-12">
                    <br>
                    <button name="button" value="Save" class="btn btn-lg btn-success pull-right" type="submit">Save</button>
                    <button name="button" value="Cancel" class="btn btn-lg btn-primary pull-left" type="submit">Cancel</button>
                </div>
            }
        </div>
        
    </div>
</div>
<button id="search-users" class="btn btn-success" onclick="getData()">yes</button>
<script type="text/javascript">

    function myFunction() {
        var x = document.getElementById("addmoney");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }

    function sync() {
        var x = document.getElementById("donor").selectedIndex;
        var y = document.getElementById("donor").options;
        var id = y[x].index;
        document.getElementById("pa").value = id;
        //alert("Index: " + y[x].index + " is " + y[x].text);
    }
    function block() {
        var x = document.getElementById("stock").selectedIndex;
        var y = document.getElementById("stock").options;
        var id = y[x].index;
        document.getElementById("as").value = id;
        //alert("Index: " + y[x].index + " is " + y[x].text);
    }
    (function ($) {

        $.fn.searchit = function (options) {

            return this.each(function () {

                $.fn.searchit.globals = $.fn.searchit.globals || {
                    counter: 0
                }
                $.fn.searchit.globals.counter++;
                var $counter = $.fn.searchit.globals.counter;

                var $t = $(this);
                var opts = $.extend({}, $.fn.searchit.defaults, options);

                // Setup default text field and class
                if (opts.textField == null) {
                    $t.before("<input type='textbox' autocomplete='off' id='__searchit" + $counter + "'><br>");
                    opts.textField = $('#__searchit' + $counter);
                }
                if (opts.textField.length > 1) opts.textField = $(opts.textField[0]);

                if (opts.textFieldClass) opts.textField.addClass(opts.textFieldClass);
                //MY CODE-------------------------------------------------------------------
                if (opts.selected) opts.textField.val($(this).find(":selected").val());
                //MY CODE ENDS HERE -------------------------------------------------------
                if (opts.dropDown) {
                    $t.css("padding", "5px")
                        .css("margin", "-5px -20px -5px -5px");

                    $t.wrap("<div id='__searchitWrapper" + $counter + "' />");
                    opts.wrp = $('#__searchitWrapper' + $counter);
                    opts.wrp.css("display", "inline-block")
                        .css("vertical-align", "top")
                        .css("overflow", "hidden")
                        .css("border", "solid grey 1px")
                        .css("position", "absolute")
                        .hide();
                    if (opts.dropDownClass) opts.wrp.addClass(opts.dropDownClass);
                }

                opts.optionsFiltered = [];
                opts.optionsCache = [];

                // Save listbox current content
                $t.find("option").each(function (index) {
                    opts.optionsCache.push(this);
                });

                // Save options
                $t.data('opts', opts);

                // Hook listbox click
                $t.click(function (event) {
                    _opts($t).textField.val($(this).find(":selected").text());
                    _opts($t).wrp.hide();
                    event.stopPropagation();
                });

                // Hook html page click to close dropdown
                $("html").click(function () {
                    _opts($t).wrp.hide();
                });

                // Hook the keyboard and we're done
                _opts($t).textField.keyup(function (event) {
                    if (event.keyCode == 13) {
                        $(this).val($t.find(":selected").text());
                        _opts($t).wrp.hide();
                        return;
                    }
                    setTimeout(_findElementsInListBox($t, $(this)), 50);
                })

            })


            function _findElementsInListBox(lb, txt) {

                if (!lb.is(":visible")) {
                    _showlb(lb);
                }

                _opts(lb).optionsFiltered = [];
                var count = _opts(lb).optionsCache.length;
                var dropDown = _opts(lb).dropDown;
                var searchText = txt.val().toLowerCase();

                // find match (just the old classic loop, will make the regexp later)
                $.each(_opts(lb).optionsCache, function (index, value) {
                    if ($(value).text().toLowerCase().indexOf(searchText) > -1) {
                        // save matching items
                        _opts(lb).optionsFiltered.push(value);
                    }

                    // Trigger a listbox reload at the end of cycle
                    if (!--count) {
                        _filterListBox(lb);
                    }
                });
            }

            function _opts(lb) {
                return lb.data('opts');
            }

            function _showlb(lb) {
                if (_opts(lb).dropDown) {
                    var tf = _opts(lb).textField;
                    lb.attr("size", _opts(lb).size);
                    _opts(lb).wrp.show().offset({
                        top: tf.offset().top + tf.outerHeight(),
                        left: tf.offset().left
                    });
                    _opts(lb).wrp.css("width", tf.outerWidth() + "px");
                    lb.css("width", (tf.outerWidth() + 25) + "px");
                }
            }

            function _filterListBox(lb) {
                lb.empty();

                if (_opts(lb).optionsFiltered.length == 0) {
                    lb.append("<option>" + _opts(lb).noElementText + "</option>");
                } else {
                    $.each(_opts(lb).optionsFiltered, function (index, value) {
                        lb.append(value);
                    });
                    lb[0].selectedIndex = 0;
                }
            }
        }

        $.fn.searchit.defaults = {
            textField: null,
            textFieldClass: null,
            dropDown: true,
            dropDownClass: null,
            size: 5,
            filtered: true,
            noElementText: "No elements found",
            //MY CODE------------------------------------------
            selected: false
            //MY CODE ENDS ------------------------------------
        }

    }(jQuery))
    $("select").searchit({
        textFieldClass: 'form-control',
        selected: true
    });

    function getData() {
       var id = 0;
        $.ajax({

            method: "POST",
            url: "/Donations/search_donor",
            data: { inid: id },
            success: function (data) {
              alert
            }
        });
    }
</script>

